#!/bin/bash
#
# Compile script for Venoom
# copyright (C) 2021-2022 pocong tobat
# Set Kernel Version


KERNELVER=$(make kernelversion)
VERSION=Venoom_X
export TZ=Asia/Jakarta
START=$(date +"%s")
IMAGE=$(pwd)/out/arch/arm64/boot/Image.gz-dtb
DTBO=$(pwd)/out/arch/arm64/boot/dtbo.img
TANGGAL=$(TZ=Asia/Jakarta date "+%Y%m%d-%H%M")
SECONDS=0 # builtin bash timer
CLANG_VERSION=$(/root/kernel/c/bin/clang --version | head -n 1 | perl -pe 's/\(http.*?\)//gs' | sed -e 's/  */ /g' -e 's/[[:space:]]*$//')
KERNEL_DIR=$(pwd)
FINAL_KERNEL_ZIP=Venoom_Alioth.zip
BRANCH=$(git rev-parse --abbrev-ref HEAD)
TC_DIR="/root/kernel/c"
GCC_64_DIR="/root/kernel/gcc/toolchains/aarch64-linux-android-4.9/prebuilt/linux-x86_64"
GCC_32_DIR="/root/kernel/gcc/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64"
export KBUILD_BUILD_HOST="Venoom"
export KBUILD_BUILD_USER="WartegCI"
AK3_DIR=$PWD/AnyKernel3/
export chat_id="-1001551521202"
export TOKEN="5452672785:AAFh0ke8wGsfvk1qzEnZKi3fJ_eZvpOx1Rc"
DEFCONFIG="vendor/alioth_defconfig"
export PATH="$TC_DIR/bin:$PATH"
export CCACHE_DIR="/root/.cache/ccache"
export CA="ccache gcc"
export CXX="ccache g++"
export PATH="/usr/lib/ccache:$PATH"
export KBUILD_COMPILER_STRING="/root/kernel/c/bin/clang --version | head -n 1 | perl -pe 's/\(http.*?\)//gs' | sed -e 's/  */ /g' -e 's/[[:space:]]*$//')"

BUILD_START=$(date +"%s")
blue='\033[1;34m'
yellow='\033[1;33m'
nocol='\033[0m'

if [[ $1 = "-r" || $1 = "--regen" ]]; then
	make O=out ARCH=arm64 $DEFCONFIG savedefconfig
	cp out/defconfig arch/arm64/configs/$DEFCONFIG
	echo -e "\nSuccessfully regenerated defconfig at $DEFCONFIG"
	exit
fi

#curl -s -X POST https://api.telegram.org/bot${TOKEN}/sendMessage -d text="Buckle up bois ${BRANCH} build has started" -d chat_id=${chat_id} -d parse_mode=HTML

# Post to CI channel
curl -s -X POST https://api.telegram.org/bot${TOKEN}/sendMessage -d text="Buckle up bois Venoom  kernel build has started" -d chat_id=${chat_id} -d parse_mode=HTML
curl -s -X POST https://api.telegram.org/bot${TOKEN}/sendMessage -d text="Branch: <code>$(git rev-parse --abbrev-ref HEAD)</code>
Kernel Version : <code>${KERNELVER}</code>
Compiler Used : <code>${CLANG_VERSION}</code>
Latest Commit: <code>$(git log --pretty=format:'%h : %s' -1)</code>
Starting..." -d chat_id=${chat_id} -d parse_mode=HTML

mkdir -p out
make O=out ARCH=arm64 $DEFCONFIG

echo -e "\nStarting compilation...\n"
# make -j$(nproc --all) O=out ARCH=arm64 CC=clang LD=ld.lld AS=llvm-as AR=llvm-ar NM=llvm-nm OBJCOPY=llvm-objcopy OBJDUMP=llvm-objdump STRIP=llvm-strip CROSS_COMPILE=$GCC_64_DIR/bin/aarch64-linux-android- CROSS_COMPILE_ARM32=$GCC_32_DIR/bin/arm-linux-androideabi- CLANG_TRIPLE=aarch64-linux-gnu- Image.gz dtbo.img
make -j$(nproc --all) O=out ARCH=arm64 CC=clang LD=ld.lld AS=llvm-as AR=llvm-ar NM=llvm-nm OBJCOPY=llvm-objcopy OBJDUMP=llvm-objdump STRIP=llvm-strip CROSS_COMPILE=aarch64-linux-gnu- CROSS_COMPILE_ARM32=arm-linux-gnueabi- CLANG_TRIPLE=aarch64-linux-gnu- Image.gz-dtb dtbo.img | tee build.log
#kernel="out/arch/arm64/boot/Image.gz-dtb"
#dtbo="out/arch/arm64/boot/dtbo.img"

END=$(date +"%s")
DIFF=$((END - START))

echo -e "$yellow**** Verify Image.gz-dtb & dtbo.img ****$nocol"
ls $PWD/out/arch/arm64/boot/Image.gz-dtb
ls $PWD/out/arch/arm64/boot/dtbo.img

echo -e "$yellow**** Verifying AnyKernel3 Directory ****$nocol"
ls $AK3_DIR
echo -e "$yellow**** Removing leftovers ****$nocol"
rm -rf $AK3_DIR/Image.gz-dtb
rm -rf $AK3_DIR/dtbo.img
rm -rf $AK3_DIR/$FINAL_KERNEL_ZIP

echo -e "$yellow**** Copying Image.gz-dtb & dtbo.img ****$nocol"
cp $PWD/out/arch/arm64/boot/Image.gz-dtb $AK3_DIR/
cp $PWD/out/arch/arm64/boot/dtbo.img $AK3_DIR/

echo -e "$yellow**** Time to zip up! ****$nocol"
cd $AK3_DIR/
zip -r9 $FINAL_KERNEL_ZIP * -x README $FINAL_KERNEL_ZIP
cp $AK3_DIR/$FINAL_KERNEL_ZIP /root/kernel/$FINAL_KERNEL_ZIP

echo -e "$yellow**** Done, here is your checksum ****$nocol"
cd ..
rm -rf $AK3_DIR/$FINAL_KERNEL_ZIP
rm -rf $AK3_DIR/Image.gz-dtb
rm -rf $AK3_DIR/dtbo.img

if [ -f /root/kernel/$FINAL_KERNEL_ZIP ]
	then
	curl -s -X POST https://api.telegram.org/bot${TOKEN}/sendMessage -d text="<i>Build compiled successfully in $((DIFF / 60)) minute(s) and $((DIFF % 60)) seconds</i>" -d chat_id=${chat_id} -d parse_mode=HTML
        curl -F chat_id="${chat_id}"  \
                    -F document=@"/root/kernel/$FINAL_KERNEL_ZIP" \
                    https://api.telegram.org/bot${TOKEN}/sendDocument

        curl -s -X POST https://api.telegram.org/bot${TOKEN}/sendMessage -d text="hi guys, the latest update is available !" -d chat_id=${chat_id} -d parse_mode=HTML

cd ..
else
        curl -F chat_id="${chat_id}"  \
                    -F caption="Build ended with an error !!" \
                    -F document=@"build.log" \
                    https://api.telegram.org/bot${TOKEN}/sendDocument

fi
